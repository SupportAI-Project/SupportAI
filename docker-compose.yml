services:
  supportai-frontend:
    container_name: supportai-frontend
    build:
      context: ./SupportAI-Frontend
      dockerfile: Dockerfile
      target: deps
    command: npm run dev
    restart: always
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    volumes:
      - ./SupportAI-Frontend:/app
      - node_modules_frontend:/app/node_modules
      - next_frontend:/app/.next
    ports:
      - "3000:3000"

  supportai-backend:
    container_name: supportai-backend
    build:
      context: ./SupportAI-Backend
      dockerfile: Dockerfile
    env_file:
      - ./SupportAI-Backend/.env
    command: npm run start:dev
    volumes:
      - ./SupportAI-Backend:/usr/src/app
      - node_modules_backend:/usr/src/app/node_modules
    restart: always
    ports:
      - "3001:3000"
    depends_on:
      - postgres

  postgres:
    image: postgres:latest
    container_name: supportai-postgres
    env_file:
      - ./SupportAI-Backend/.env 
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  node_modules_frontend:
  next_frontend:
  node_modules_backend:
  postgres_data:

